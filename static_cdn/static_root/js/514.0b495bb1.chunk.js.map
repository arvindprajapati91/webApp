{"version":3,"file":"static/js/514.0b495bb1.chunk.js","mappings":"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","sources":["components/ChangeHandler.jsx","components/FormNameUpdatePage.jsx","components/apiError.jsx","components/errorMessage.jsx","components/fieldValidation.jsx","components/getDetailsFun.jsx","components/successMessage.jsx","components/wrapperClickFun.jsx","labModule/sampleTestResult/CreateUpdatePage.jsx","labModule/sampleTestResult/functions/addTestResultRowFun.jsx","labModule/sampleTestResult/functions/fetchSampleDetailsFun.jsx","labModule/sampleTestResult/functions/getDetailsFun.jsx","labModule/sampleTestResult/functions/trnSaveSubmitFun.jsx"],"sourcesContent":["function changeHander(event) {\r\n    const ele = document.getElementById(event.target.name + '_helper')\r\n    if (ele !== null) {\r\n        if (event.target.value === \"\") {\r\n            if (ele.classList.contains(\"helper_hide\")) {\r\n                ele.classList.remove(\"helper_hide\");\r\n            }\r\n        }\r\n        else {\r\n            ele.classList.add(\"helper_hide\");\r\n        }\r\n        setTimeout(() => {\r\n            ele.classList.add(\"helper_hide\")\r\n        }, process.env.REACT_APP_ERR_MSG_DUR);\r\n    }\r\n    document.getElementById(event.target.id).style.border = \"1px solid grey\"\r\n    this.setState({\r\n        [event.target.name]: '',\r\n        [event.target.name]: event.target.value,\r\n    });\r\n}\r\n\r\nexport default changeHander;","import React, { Component } from 'react'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { ModalHeader, ModalDescription, ModalContent, ModalActions, Button, Modal } from 'semantic-ui-react'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nimport moment from \"moment\";\r\n\r\nexport class FormNameUpdatePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            importDisplay: this.props.importDisplay,\r\n            open: false,\r\n            auditTrail: [],\r\n        }\r\n    };\r\n\r\n    sendFormRequest = (e) => {\r\n        this.props.parentCallback(e.target.id);\r\n    }\r\n\r\n    showAuditTrailUserMaster = async (e) => {\r\n        console.log(this.props.slug_id)\r\n        this.setState({ open: true })\r\n        // Audit Trail\r\n        await fetch(`/${process.env.REACT_APP_NAME}/userMaster/userMasterAuditTrailAPI/?slug=${this.props.slug_id}&page_size=${process.env.REACT_APP_PAGE_SIZE_FOR_MASTER}`).then((response) => {\r\n            if (response.statusText === \"Internal Server Error\") {\r\n                var url = window.location.origin\r\n                window.location.replace(url);\r\n            }\r\n            response.json().then((data) => {\r\n                this.setState({\r\n                    auditTrail: data.results,\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    showAuditTrail = async (e) => {\r\n        console.log(this.props.slug_id)\r\n        this.setState({ open: true })\r\n        // Audit Trail\r\n        await fetch(`/${process.env.REACT_APP_NAME}/auditTrail/auditTrailViewAPI/?record_no=${this.props.recordNo}&table_name=${this.props.tableName}&page_size=${process.env.REACT_APP_PAGE_SIZE_FOR_MASTER}`).then((response) => {\r\n            if (!response.ok) {\r\n                var url = window.location.origin\r\n                window.location.replace(url);\r\n            }\r\n            response.json().then((data) => {\r\n                this.setState({\r\n                    auditTrail: data.results,\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [{\r\n            dataField: this.props.list_page.includes('userMaster') ? 'user_name' : \"record_no\",\r\n            text: this.props.list_page.includes('userMaster') ? 'User Name' : \"Record No\",\r\n        }, {\r\n            dataField: 'process_desc',\r\n            text: 'Process',\r\n        },\r\n        {\r\n            dataField: 'action_desc',\r\n            text: 'Action',\r\n        },\r\n        {\r\n            dataField: 'action_by',\r\n            text: 'Action By',\r\n\r\n        },\r\n        {\r\n            dataField: 'action_date',\r\n            text: 'Action Date',\r\n            formatter: (cell) => {\r\n                return moment(cell).format('DD-MMM-YYYY HH:MM:SS A')\r\n            },\r\n        },\r\n        {\r\n            dataField: 'changes',\r\n            text: 'Changes',\r\n        }];\r\n\r\n        // console.log(\"Form Name\")\r\n        return (\r\n            <div className=\"row form-name-row\" style={{ marginTop: \"3px\" }}>\r\n                <div className=\"col-lg-2 col-md-2 col-sm-2\" style={{ margin: \"0px\", paddingTop: \"3px\" }}>\r\n                    <span style={{ color: \"brown\", fontSize: \"15px\" }}>\r\n                        {this.props.form_name}\r\n                    </span>\r\n                </div>\r\n                <div className=\"col-lg-7 col-md-7 col-sm-7\" style={{ margin: \"0\", display: \"flex\" }}>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"tooltip-disabled\">Please use this option to import data from Excel File</Tooltip>}>\r\n                        <div className=\"input-group input-group-sm\" style={{ display: this.state.importDisplay === true ? \"flex\" : \"none\" }}>\r\n                            <input className=\"form-control\" style={{ width: \"50%\" }} type=\"file\" id=\"formFile\" onChange={this.props.fileSelection} />\r\n                            <span className=\"btn btn-danger\" style={{ textDecoration: 'none', color: \"white\" }} onClick={this.props.import_data}>\r\n                                Import\r\n                            </span>\r\n                        </div>\r\n                    </OverlayTrigger>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-3 col-sm-3\" style={{ margin: \"0px\", paddingTop: \"3px\" }}>\r\n                    <Link to={window.location.pathname.includes(\"pending\") ? `${this.props.list_page}/pendingApproval` : this.props.list_page} className=\"back_to_list\" style={{ fontWeight: \"500\", color: \"black\", textDecoration: \"none\", cursor: \"pointer\", float: \"right\" }}>\r\n                        <svg style={{ color: \"brown\", marginRight: \"5px\" }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-left-circle-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\r\n                        </svg>\r\n                        <span style={{ color: \"black\" }}>Back to List</span>\r\n                    </Link>\r\n                    {this.props.auditTrailView === \"Yes\" ?\r\n                        <div className=\"audit_trail\" id=\"audit_trail\" style={{ fontWeight: \"500\", color: \"black\", textDecoration: \"none\", cursor: \"pointer\", float: \"right\", paddingLeft: \"10px\", paddingRight: \"10px\" }} onClick={this.showAuditTrail}>\r\n                            <svg height=\"18px\" version=\"1.1\" viewBox=\"0 0 20 21\" width=\"20px\"><title /><desc /><defs /><g fill=\"none\" fill-rule=\"evenodd\" id=\"Page-1\" stroke=\"none\" stroke-width=\"1\"><g fill=\"#004a5d\" id=\"Core\" opacity=\"0.9\" transform=\"translate(-464.000000, -254.000000)\"><g id=\"history\" transform=\"translate(464.000000, 254.500000)\"><path d=\"M10.5,0 C7,0 3.9,1.9 2.3,4.8 L0,2.5 L0,9 L6.5,9 L3.7,6.2 C5,3.7 7.5,2 10.5,2 C14.6,2 18,5.4 18,9.5 C18,13.6 14.6,17 10.5,17 C7.2,17 4.5,14.9 3.4,12 L1.3,12 C2.4,16 6.1,19 10.5,19 C15.8,19 20,14.7 20,9.5 C20,4.3 15.7,0 10.5,0 L10.5,0 Z M9,5 L9,10.1 L13.7,12.9 L14.5,11.6 L10.5,9.2 L10.5,5 L9,5 L9,5 Z\" id=\"Shape\" /></g></g></g></svg>\r\n                            <span style={{ color: \"black\", paddingLeft: \"3px\" }}>Audit Trail</span>\r\n                        </div>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                </div>\r\n                <Modal centered={false} open={this.state.open} onClose={() => this.setState({ open: false })} onOpen={() => this.setState({ open: true })}>\r\n                    <ModalHeader>Audit Trail of {this.props.recordNo}</ModalHeader>\r\n                    <ModalContent>\r\n                        <ModalDescription>\r\n                            <BootstrapTable keyField='record_no' data={this.state.auditTrail} columns={columns} striped hover condensed pagination={paginationFactory()} noDataIndication={'No records found'} />\r\n                        </ModalDescription>\r\n                    </ModalContent>\r\n                    <ModalActions>\r\n                        <Button onClick={() => this.setState({ open: false })}>OK</Button>\r\n                    </ModalActions>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormNameUpdatePage\r\n","function apiError(error){\r\n      if (error.includes('Unexpected') || error.includes('Failed to fetch')) {\r\n            this.setState({\r\n                loading: this.state.loading = false,\r\n            });\r\n            alert(\"Something went wrong!\")\r\n        }\r\n        else {\r\n            this.setState({\r\n                loading: this.state.loading = false,\r\n            });\r\n      }\r\n}\r\n\r\nexport default apiError;","import React, { Component } from 'react';\r\n\r\nclass errorMessage extends Component {\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"error_alert\" className={`alert alert-warning alert-dismissible ${this.props.err_msg_visible ? 'alert-shown' : 'alert-hidden'}`} role=\"alert\" style={{ display: this.props.err_msg_visible ? 'block' : 'none' }}>\r\n\t\t\t\t<strong>Error :</strong> {this.props.error_message}\r\n\t\t\t\t{/* <button type=\"button\" className=\"btn-close\" onClick={this.errorClose}></button> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default errorMessage;","function fieldValidation(msg, id) {\r\n    this.setState({\r\n        err_msg_visible: false,\r\n    });\r\n    this.setState({\r\n        err_msg_visible: true,\r\n        error_message: msg,\r\n        loading: false,\r\n    })\r\n    setTimeout(() => {\r\n        this.setState({\r\n            err_msg_visible: false,\r\n        });\r\n    }, process.env.REACT_APP_ERR_MSG_DUR);\r\n    document.getElementById(id).style.border = \"1px solid red\"\r\n}\r\n\r\n\r\nexport default fieldValidation;","import apiError from \"./apiError\";\r\n\r\nasync function getDetailsFun(queryParams, form_name) {\r\n    if (queryParams.includes(\"=\") || queryParams.includes(\"%\")) {\r\n        try {\r\n            await fetch(queryParams)\r\n                .then(async (res) => res.json())\r\n                .then((details) => {\r\n                    this.setState({\r\n                        details: details\r\n                    })\r\n                });\r\n        } catch (e) {\r\n            let error = e.message;\r\n            apiError.call(this, error)\r\n        }\r\n    } else {\r\n        document.title = `${form_name} Create`;\r\n        this.setState({ loading: false });\r\n    }\r\n}\r\n\r\nexport default getDetailsFun;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fas, faCircleCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass successMessage extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className={`alert alert-success alert-dismissible ${\r\n            this.props.msg_visible ? \"alert-shown\" : \"alert-hidden\"\r\n          }`}\r\n          role=\"alert\"\r\n          style={{ display: this.props.msg_visible ? \"flex\" : \"none\" }}\r\n        >\r\n          <div style={{ display: this.props.msg_visible ? \"flex\" : \"none\" }}>\r\n            <FontAwesomeIcon\r\n              icon={{ fas, faCircleCheck }}\r\n              className=\"success_circle_check\"\r\n            />\r\n            <strong>{this.props.msg}</strong>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default successMessage;\r\n","function wrapper_clickFun() {\r\n    if (window.innerWidth <= \"767\") {\r\n        const ele = document.getElementById(\"side-nav-bar\")\r\n        if (ele.classList.contains(\"sidebar-transform\")) {\r\n            ele.classList.remove(\"sidebar-transform\");\r\n        }\r\n        // else {\r\n        //     ele.classList.add(\"sidebar-transform\");\r\n        // }\r\n    }\r\n}\r\n\r\nexport default wrapper_clickFun","/* eslint-disable react/no-direct-mutation-state */\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Navigate } from \"react-router-dom\";\r\nimport FormName from \"../../components/FormNameUpdatePage\";\r\nimport Wrapper_ClickFun from \"../../components/wrapperClickFun\";\r\nimport ChangeHandler from \"../../components/ChangeHandler\";\r\nimport Loader from \"../../components/Loader\";\r\nimport ErrorMessage from \"../../components/errorMessage\";\r\nimport SuccessMessage from '../../components/successMessage';\r\nimport { TbLocationSearch } from \"react-icons/tb\";\r\nimport { DateInput } from 'semantic-ui-calendar-react';\r\nimport { GrResources } from \"react-icons/gr\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { ModalHeader, ModalContent, ModalActions, Button, Icon, Modal } from 'semantic-ui-react'\r\nimport fetchSampleDetailsFun from \"./functions/fetchSampleDetailsFun\";\r\nimport addTestResultRowFun from \"./functions/addTestResultRowFun\";\r\nimport getDetailsFunction from \"./functions/getDetailsFun\";\r\nimport trnSaveSubmitFun from \"./functions/trnSaveSubmitFun\";\r\n\r\n\r\nconst API_form_name = \"sampleTestResult\";\r\nconst List_Path = `/${process.env.REACT_APP_NAME}/${API_form_name}`;\r\nconst form_name = \"Sample Test Result\";\r\nconst form_type = \"Transaction\";\r\nconst Create_Update_Path = `/${process.env.REACT_APP_NAME}/${API_form_name}/CreateUpdate`;\r\nconst sampleListAPI = `/${process.env.REACT_APP_NAME}/sampleRegistration/ListAPI/`;\r\n\r\nconst StateDic = {\r\n    report_no: '',\r\n    details: '',\r\n    obj_id: '',\r\n    received_date: '',\r\n    confirmation_date: \"\",\r\n    report_due_date: \"\",\r\n    service_type: '',\r\n    customer_ref_details: '',\r\n    applicant_type: '',\r\n    applicant_name: '',\r\n    applicant_contact_no: '',\r\n    applicant_email: '',\r\n    applicant_address: '',\r\n    attention: '',\r\n    sample_registration: '',\r\n    testParameterAdded: [],\r\n    testResult: [],\r\n    err_msg_visible: false,\r\n    error_message: '',\r\n    loading: true,\r\n    redirect: false,\r\n    modalOpen: false,\r\n    fieldDisplay: false,\r\n    testResultFor: '',\r\n    test_id: '',\r\n    test_parameter: '',\r\n    test_result: '',\r\n    test_requirement: '',\r\n    test_unit: '',\r\n    test_rcd_: [],\r\n    formAction: '',\r\n    submitBtn: \"No\",\r\n    status: '',\r\n    redirectionPath: ''\r\n};\r\n\r\nclass CreateUpdatePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = StateDic;\r\n    }\r\n\r\n    drpHandleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        document.getElementById(e.target.id).value = e.target.value;\r\n    };\r\n\r\n    getDetails = async () => {\r\n        getDetailsFunction.call(this, form_name)\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getDetails();\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var url = `${List_Path}/CreateUpdateAPI/`\r\n        trnSaveSubmitFun.call(this, event, url)\r\n    };\r\n\r\n    fetchSampleDetails = async (event) => {\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n        const url = `${List_Path}/fetchSampleRegister?document_no=${this.state.sample_registration}`\r\n        fetchSampleDetailsFun.call(this, url)\r\n    }\r\n\r\n    addTestResultModal = async (e) => {\r\n        let testID = e.target.getAttribute(\"test_id\")\r\n        if (testID) {\r\n            this.setState({\r\n                modalOpen: true,\r\n                testResultFor: this.state.testResultFor = e.target.id,\r\n                test_id: this.state.test_id = testID,\r\n            })\r\n        }\r\n        else {\r\n            testID = e.target.parentElement.getAttribute(\"test_id\")\r\n            this.setState({\r\n                modalOpen: true,\r\n                testResultFor: this.state.testResultFor = e.target.parentElement.id,\r\n                test_id: this.state.test_id = testID,\r\n            })\r\n        }\r\n        if (this.state[`test_rcd_${testID}`]) {\r\n            this.setState({\r\n                [`test_rcd_${testID}`]: this.state[`test_rcd_${testID}`]\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                [`test_rcd_${testID}`]: [],\r\n            })\r\n        }\r\n    }\r\n\r\n    addTestResultRow = async (e) => {\r\n        addTestResultRowFun.call(this, e)\r\n    }\r\n\r\n    deleteTestResultRow = async (e) => {\r\n        var td = e.target.parentNode;\r\n        var tr = td.parentNode; // the row to be removed\r\n        tr.parentNode.removeChild(tr);\r\n    }\r\n\r\n    render() {\r\n        const { error_message, redirect } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Navigate to={`${List_Path}${this.state.redirectionPath}`} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"content-wrapper\" onClick={Wrapper_ClickFun.bind(this)}>\r\n                    <form id=\"app-form\" onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <FormName form_name_list={form_name} form_name={form_name} auditTrailView={\"Yes\"} recordNo={this.state.report_no} tableName={\"sample_test_parameter_result\"} form_type={form_type} list_page={List_Path} ></FormName>\r\n                        <Loader load={this.state.loading}></Loader>\r\n                        <ErrorMessage error_message={error_message} err_msg_visible={this.state.err_msg_visible}></ErrorMessage>\r\n                        <SuccessMessage msg_visible={this.state.success_message} msg={\"Data saved successfully\"}></SuccessMessage>\r\n                        <div className=\"row\">\r\n                            <p className=\"title_label\">Sample Details</p>\r\n                            <div className=\"col-lg-3 col-md-3 col-sm-3 did-floating-label-content\" style={{ display: \"inline-flex\" }}>\r\n                                <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"sample_registration\" id=\"sample_registration\" value={this.state.sample_registration} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} readOnly={this.state.obj_id ? true : false} />\r\n                                <label className=\"did-floating-label\">Sample Register No. # <span className=\"mandatory_field\">*</span></label>\r\n                                {this.state.report_no === \"\" ?\r\n                                    <TbLocationSearch style={{ fontSize: \"30px\", marginTop: \"3px\", marginLeft: \"5px\", color: \"brown\", cursor: \"pointer\" }} onClick={this.fetchSampleDetails} />\r\n                                    :\r\n                                    ''\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"customer_ref_details\" id=\"customer_ref_details\" required value={this.state.customer_ref_details} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                <label className=\"did-floating-label\">Customer Ref Details <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"customer_ref_details_helper\">\r\n                                    Required\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-date-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <DateInput id=\"received_date\" className=\"floating_date_input\" name=\"received_date\" dateFormat=\"DD-MMM-YYYY\" value={this.state.received_date} readOnly={true} maxDate={new Date()} iconPosition=\"left\" placeholder=\"DD-MMM-YYYY\" onChange={this.handleChange} icon=\"calendar alternate\" clearable clearIcon={<Icon name=\"remove\" colour=\"red\" className=\"calender_icon\" />} required />\r\n                                <label className=\"did-floating-label floating_date_label\">Received Date <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"received_date_helper\">Required</div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-date-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <DateInput id=\"confirmation_date\" className=\"floating_date_input\" name=\"confirmation_date\" dateFormat=\"DD-MMM-YYYY\" value={this.state.confirmation_date} iconPosition=\"left\" placeholder=\"DD-MMM-YYYY\" onChange={this.handleChange} icon=\"calendar alternate\" clearable clearIcon={<Icon name=\"remove\" colour=\"red\" className=\"calender_icon\" />} required />\r\n                                <label className=\"did-floating-label floating_date_label\">Confirmation Date <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"confirmation_date_helper\">Required</div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <select className=\"did-floating-select\" name=\"service_type\" id=\"service_type\" value={this.state.service_type} onChange={this.drpHandleChange} onClick={this.drpHandleChange} onFocus={this.drpHandleChange}>\r\n                                    <option value=\"Regular\">Regular</option>\r\n                                </select>\r\n                                <label className=\"did-floating-label\">Service Type</label>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-3 col-md-3 col-sm-3 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"report_no\" id=\"report_no\" value={this.state.report_no} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} readOnly={true} disabled={true} />\r\n                                <label className=\"did-floating-label\">Report Number</label>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-8 col-md-8 col-sm-8 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <textarea className=\"did-floating-input\" type=\"text\" placeholder=\" \" cols=\"60\" rows=\"2\" name=\"sample_description\" id=\"sample_description\" value={this.state.sample_description} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                <label className=\"did-floating-label\">Sample Description <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"sample_descriptions_helper\">\r\n                                    Required\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p className=\"title_label\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>Applicant Details</p>\r\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <select className=\"did-floating-select\" name=\"applicant_type\" id=\"applicant_type\" value={this.state.applicant_type} onChange={this.drpHandleChange} onClick={this.drpHandleChange}>\r\n                                    <option value=\"\">---Select---</option>\r\n                                    <option value=\"Vendor\">Vendor</option>\r\n                                    <option value=\"Buyer\">Buyer</option>\r\n                                    <option value=\"Agent\">Agent</option>\r\n                                </select>\r\n                                <label className=\"did-floating-label\">Applicant <span className=\"mandatory_field\">*</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-3 col-md-3 col-sm-3 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"applicant_name\" id=\"applicant_name\" required value={this.state.applicant_name} maxLength={100} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                <label className=\"did-floating-label\">Applicant Name <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"applicant_name_helper\">\r\n                                    Required\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"attention\" id=\"attention\" required value={this.state.attention} maxLength={100} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                <label className=\"did-floating-label\">Attention <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"attention_helper\">\r\n                                    Required\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"applicant_contact_no\" id=\"applicant_contact_no\" required value={this.state.applicant_contact_no} maxLength={20} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                <label className=\"did-floating-label\">Applicant Contact No <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"applicant_contact_no_helper\">\r\n                                    Required\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-3 col-md-3 col-sm-3 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"applicant_email\" id=\"applicant_email\" required value={this.state.applicant_email} maxLength={50} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                <label className=\"did-floating-label\">Applicant Email <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"applicant_email_helper\">\r\n                                    Required\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-8 col-md-8 col-sm-8 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <textarea className=\"did-floating-input\" type=\"text\" placeholder=\" \" cols=\"60\" rows=\"2\" name=\"applicant_address\" id=\"applicant_address\" value={this.state.applicant_address} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                <label className=\"did-floating-label\">Applicant Address <span className=\"mandatory_field\">*</span></label>\r\n                                <div className=\"form-helper helper_hide\" id=\"applicant_address_helper\">\r\n                                    Required\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p className=\"title_label\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>Test Details & Results</p>\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                <div className=\"table-responsive\" style={{ height: \"auto\" }}>\r\n                                    <table className=\"table table-hover table-striped table-bordered border-primary\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th></th>\r\n                                                <th>Test Name</th>\r\n                                                <th>Test Method</th>\r\n                                                <th>Department</th>\r\n                                                <th>Cost</th>\r\n                                                {window.location.pathname.includes(\"confirmation\") ?\r\n                                                    <th>Conclusion</th>\r\n                                                    :\r\n                                                    <th>Suggested Conclusion</th>\r\n                                                }\r\n                                                <th>Note</th>\r\n                                                <th>Result Lines</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.testParameterAdded.length > 0 ?\r\n                                                this.state.testParameterAdded.map(t =>\r\n                                                    <tr>\r\n                                                        <td style={{ textAlign: \"center\", color: \"darkgreen\", fontSize: \"18px\", cursor: \"pointer\" }} id={t.test_name} test_id={t.id}>\r\n                                                            <GrResources id={t.test_name} test_id={t.id} onClick={this.addTestResultModal} style={{ cursor: \"pointer\" }} />\r\n                                                        </td>\r\n                                                        <td>{t.test_name}</td>\r\n                                                        <td>{t.test_method}</td>\r\n                                                        <td>{t.department}</td>\r\n                                                        <td>\r\n                                                            <div class=\"form-floating\">\r\n                                                                <input class=\"form-control\" placeholder=\" \" cols=\"60\" rows=\"3\" name={`cost_${t.id}`} id={`cost_${t.id}`} value={this.state[`cost_${t.id}`]} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} style={{ height: \"auto\" }} />\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <select className=\"did-floating-select did-floating-select-sm\" name={`conclusion_${t.id}`} id={`conclusion_${t.id}`} value={this.state[`conclusion_${t.id}`]} onChange={this.drpHandleChange} required style={{ width: \"200px\" }}>\r\n                                                                <option value=\"\">---Select---</option>\r\n                                                                <option value=\"M\">M-Meets Requirement</option>\r\n                                                                <option value=\"F\">F-Fails To Meet Requirement</option>\r\n                                                                <option value=\"R\">R-Refer Result</option>\r\n                                                                <option value=\"*\">*-Requirement Not Provided</option>\r\n                                                                <option value=\"NA\">N/A-Not Applicable</option>\r\n                                                            </select>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <div class=\"form-floating\">\r\n                                                                <textarea class=\"form-control\" placeholder=\" \" cols=\"60\" rows=\"3\" name={`note_${t.id}`} id={`note_${t.id}`} value={this.state[`note_${t.id}`]} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)}></textarea>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td id={`test_result_td_${t.id}`}></td>\r\n                                                    </tr>\r\n                                                )\r\n                                                :\r\n                                                <tr>\r\n                                                    <td colSpan=\"16\" className=\"no_record\">No Records to Display</td>\r\n                                                </tr>\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ border: \"none\" }}>\r\n                                <div class=\"bd-example submit_form\">\r\n                                    {(window.location.pathname.includes(\"modify\") || window.location.pathname.includes(\"CreateUpdate\")) ?\r\n                                        this.state.submitBtn !== \"Yes\" ?\r\n                                            <button type='submit' class=\"btn btn-primary\" id=\"draftBtn\" onClick={(e) => this.setState({ formAction: \"draftBtn\" })}>Draft</button>\r\n                                            :\r\n                                            ''\r\n                                        :\r\n                                        ''\r\n                                    }\r\n                                    {(window.location.pathname.includes(\"modify\") || window.location.pathname.includes(\"CreateUpdate\")) ?\r\n                                        this.state.status === \"Approve\" ?\r\n                                            ''\r\n                                            :\r\n                                            <button type='submit' class=\"btn btn-success\" id=\"submitBtn\" onClick={(e) => this.setState({ formAction: \"submitBtn\" })}>Submit</button>\r\n                                        :\r\n                                        ''\r\n                                    }\r\n                                    {window.location.pathname.includes(\"verification\") ?\r\n                                        <button type='submit' class=\"btn btn-success\" id=\"verificationBtn\" onClick={(e) => this.setState({ formAction: \"verified\" })}>Approve</button>\r\n                                        :\r\n                                        ''\r\n                                    }\r\n                                    {window.location.pathname.includes(\"confirmation\") ?\r\n                                        <button type='submit' class=\"btn btn-success\" id=\"confirmationBtn\" onClick={(e) => this.setState({ formAction: \"confirmation\" })}>Approve</button>\r\n                                        :\r\n                                        ''\r\n                                    }\r\n                                    <Link className=\"btn btn-secondary\" to={window.location.pathname.includes(\"pending\") ? `${List_Path}/pendingApproval` : List_Path} style={{ textDecoration: 'none', color: \"white\" }}>\r\n                                        Back to List\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Modal closeOnDimmerClick={false} size={\"large\"} open={this.state.modalOpen} onClose={() => this.setState({ modalOpen: false })}>\r\n                            <ModalHeader>Test Result for {this.state.testResultFor}</ModalHeader>\r\n                            <ModalContent>\r\n                                <form id=\"app-form\" onSubmit={this.add} autoComplete=\"off\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                            <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"test_parameter\" id=\"test_parameter\" required value={this.state.test_parameter} maxLength={50} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                            <label className=\"did-floating-label\">Parameter <span className=\"mandatory_field\">*</span></label>\r\n                                            <div className=\"form-helper helper_hide\" id=\"test_parameter_helper\">\r\n                                                Required\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-sm-2 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                            <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"test_result\" id=\"test_result\" required value={this.state.test_result} maxLength={50} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                            <label className=\"did-floating-label\">Result <span className=\"mandatory_field\">*</span></label>\r\n                                            <div className=\"form-helper helper_hide\" id=\"test_result_helper\">\r\n                                                Required\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-sm-1 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                            <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"test_requirement\" id=\"test_requirement\" required value={this.state.test_requirement} maxLength={50} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                            <label className=\"did-floating-label\">Requirement <span className=\"mandatory_field\">*</span></label>\r\n                                            <div className=\"form-helper helper_hide\" id=\"test_requirement_helper\">\r\n                                                Required\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-sm-1 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                            <input className=\"did-floating-input\" type=\"text\" placeholder=\" \" name=\"test_unit\" id=\"test_unit\" required value={this.state.test_unit} maxLength={50} onChange={ChangeHandler.bind(this)} onClick={ChangeHandler.bind(this)} />\r\n                                            <label className=\"did-floating-label\">Unit</label>\r\n                                            <div className=\"form-helper helper_hide\" id=\"test_unit_helper\">\r\n                                                Required\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-1 col-md-1 col-sm-1 col-sm-1 did-floating-label-content\" style={{ display: this.state.fieldDisplay ? \"block\" : \"none\" }}>\r\n                                            <button type=\"button\" class=\"btn btn-success\" onClick={this.addTestResultRow}>Add</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <div className=\"table-responsive\" style={{ height: \"auto\" }}>\r\n                                    <table className=\"table table-hover table-striped table-bordered border-primary\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th></th>\r\n                                                <th>Parameter</th>\r\n                                                <th>Result</th>\r\n                                                <th>Requirement</th>\r\n                                                <th>Unit</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state[`test_rcd_${this.state.test_id}`].length > 0 ?\r\n                                                this.state[`test_rcd_${this.state.test_id}`].map(t =>\r\n                                                    <tr>\r\n                                                        <td style={{ textAlign: \"center\", color: \"darkgreen\", fontSize: \"18px\", cursor: \"pointer\" }} id={t.test_parameter}>\r\n                                                            <RiDeleteBin6Line id={t.test_parameter} style={{ cursor: \"pointer\" }} onClick={this.deleteTestResultRow}/>\r\n                                                        </td>\r\n                                                        <td>{t.test_parameter}</td>\r\n                                                        <td>{t.test_result}</td>\r\n                                                        <td>{t.test_requirement}</td>\r\n                                                        <td>{t.test_unit}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                                :\r\n                                                <tr>\r\n                                                    <td colSpan=\"16\" className=\"no_record\">No Records to Display</td>\r\n                                                </tr>\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </ModalContent>\r\n                            <ModalActions>\r\n                                <Button size='mini' onClick={() => this.setState({ modalOpen: false })}>\r\n                                    Close\r\n                                </Button>\r\n                            </ModalActions>\r\n                        </Modal>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateUpdatePage;\r\n","\r\nasync function addTestResultRowFun(e) {\r\n    e.preventDefault();\r\n    const rcd = this.state[`test_rcd_${this.state.test_id}`]\r\n    let row = {\r\n        \"test_parameter_id\":this.state.test_id,\r\n        \"test_parameter\":this.state.test_parameter,\r\n        \"test_result\":this.state.test_result,\r\n        \"test_requirement\":this.state.test_requirement,\r\n        \"test_unit\":this.state.test_unit,\r\n    } \r\n    rcd.push(row)\r\n    this.setState({\r\n        [`test_rcd_${this.state.test_id}`]: rcd,\r\n        \"test_parameter\":'',\r\n        \"test_result\":'',\r\n        \"test_requirement\":'',\r\n        \"test_unit\":''\r\n    })\r\n    const resultStatus = document.getElementById(`test_result_td_${this.state.test_id}`)\r\n    resultStatus.innerHTML = \"Done\"\r\n\r\n}\r\n\r\nexport default addTestResultRowFun;\r\n","import moment from \"moment\";\r\nimport fieldValidation from \"../../../components/fieldValidation\";\r\n\r\nasync function fetchSampleDetailsFun(url) {\r\n    this.setState({\r\n        testParameterAdded: []\r\n    })\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n        return alert(\"Please enter correct Sample Register Number!\")\r\n    }\r\n    else {\r\n        const result = await response.json();\r\n        if (result.count > 0) {\r\n            for (const [key, value] of Object.entries(result.results[0])) {\r\n                if (key.includes(\"date\")) {\r\n                    let date = moment(value).format('DD-MMM-YYYY')\r\n                    this.setState({ [key]: date })\r\n                }\r\n                else if (key === \"test_parameters\") {\r\n                    this.setState(prevState => ({\r\n                        testParameterAdded: value,\r\n                    }))\r\n                }\r\n                else if (key === \"document_no\"){\r\n                    this.setState({\r\n                        sample_registration:value\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({ [key]: value })\r\n                }\r\n            }\r\n            this.setState(prevState => ({\r\n                fieldDisplay: true,\r\n                loading: false,\r\n            }))\r\n        }\r\n        else{\r\n            this.setState(prevState => ({\r\n               loading: false,\r\n            }))\r\n            let msg = \"Unable to search the values to due to maker checker validation or transaction is not submitted!\"\r\n            return fieldValidation.call(this, msg, \"inward_no\")\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default fetchSampleDetailsFun;\r\n","import moment from \"moment\";\r\nimport getDetailsFun from \"../../../components/getDetailsFun\";\r\n\r\nasync function getDetailsFunction(form_name) {\r\n    if (this.props.navOrgName === \"\" && this.props.adminAccess === false) {\r\n        return alert(\"Please change organisation to view details\");\r\n    }\r\n    this.setState({ loading: true });\r\n    const queryParams = window.location.pathname;\r\n    await getDetailsFun.call(this, queryParams, form_name);\r\n    if (this.state.details !== \"\") {\r\n        for (const [key, value] of Object.entries(this.state.details)) {\r\n            if (key === \"id\") {\r\n                this.setState({\r\n                    obj_id: value\r\n                })\r\n            }\r\n            else if (key === \"sample_registration\") {\r\n                const srRes = await fetch(`/${process.env.REACT_APP_NAME}/sampleRegistration/ListAPI/?document_no=${value}`);\r\n                if (srRes.ok) {\r\n                    const sr = await srRes.json();\r\n                    for (const [k, v] of Object.entries(sr.results[0])) {\r\n                        if (k.includes(\"date\")) {\r\n                            let date = moment(v).format('DD-MMM-YYYY')\r\n                            this.setState({ [k]: date })\r\n                        }\r\n                        else {\r\n                            this.setState({ [k]: v })\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        [key]: value\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                this.setState({ [key]: value })\r\n            }\r\n        }\r\n        const response = await fetch(`/${process.env.REACT_APP_NAME}/sampleTestResult/detailsListAPI/?sample_test_result__report_no=${this.state.report_no}`);\r\n        if (response.ok) {\r\n            const result = await response.json();\r\n            const data = result.results\r\n            let testParameterAdded = []\r\n            data.map(r => {\r\n                let row = {\r\n                    \"id\": r.test_parameters.id,\r\n                    \"test_name\": r.test_parameters.test_name,\r\n                    \"test_method\": r.test_parameters.test_method,\r\n                    \"department\": r.test_parameters.department,\r\n                    \"note\": r.test_note\r\n                }\r\n                testParameterAdded.push(row)\r\n                this.setState({\r\n                    [`conclusion_${r.test_parameters.id}`]: r.conclusion,\r\n                    [`note_${r.test_parameters.id}`]: r.test_note,\r\n                    [`cost_${r.test_parameters.id}`]: r.cost,\r\n                })\r\n            })\r\n            this.setState({\r\n                testParameterAdded: testParameterAdded,\r\n                fieldDisplay: true,\r\n                loading: false,\r\n                submitBtn:\"Yes\"\r\n            })\r\n        }\r\n        const testParameter = await fetch(`/${process.env.REACT_APP_NAME}/sampleTestResult/testParameterListAPI/?sample_test_result__report_no=${this.state.report_no}`);\r\n        if (testParameter.ok) {\r\n            const result = await testParameter.json();\r\n            const data = result.results\r\n            console.log(data)\r\n            const groupedItems = data.reduce((acc, item) => {\r\n                if (!acc[item.test_parameters.id]) {\r\n                    acc[item.test_parameters.id] = [];\r\n                }\r\n                acc[item.test_parameters.id].push(item);\r\n                return acc;\r\n            }, {});\r\n            let test_id = \"\"\r\n            for (const [k, v] of Object.entries(groupedItems)) {\r\n                let rcd = []\r\n                v.map(d => {\r\n                    test_id = d.test_parameters.id\r\n                    let row = {\r\n                        \"test_parameter_id\": d.test_parameters.id,\r\n                        \"test_parameter\": d.parameter,\r\n                        \"test_result\": d.result,\r\n                        \"test_requirement\": d.requirement,\r\n                        \"test_unit\": d.test_unit,\r\n                    }\r\n                    rcd.push(row)\r\n                })\r\n                this.setState({\r\n                    [`test_rcd_${test_id}`]: rcd,\r\n                })\r\n                const resultStatus = document.getElementById(`test_result_td_${test_id}`)\r\n                resultStatus.innerHTML = \"Done\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default getDetailsFunction;\r\n","import PostHeader from \"../../../components/postHeader\";\r\nimport apiError from \"../../../components/apiError\";\r\nimport fieldValidation from \"../../../components/fieldValidation\";\r\n\r\nasync function trnSaveSubmitFun(event, url) {\r\n    this.setState({\r\n        loading: true,\r\n    });\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: PostHeader(),\r\n        body: JSON.stringify(this.state),\r\n    };\r\n    try {\r\n        const response = await fetch(url, requestOptions);\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            if (data.status == \"Saved Draft\") {\r\n                this.setState({\r\n                    success_message: true,\r\n                    err_msg_visible: false,\r\n                    report_no: data.report_no,\r\n                    obj_id: data.obj_id,\r\n                    submitBtn: \"Yes\",\r\n                    loading: false,\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        success_message: false,\r\n                    });\r\n                }, process.env.REACT_APP_ERR_MSG_DUR);\r\n            }\r\n            else {\r\n                if (data.status === \"Verified\"){\r\n                    this.setState({\r\n                        redirectionPath: \"/listPageVerification/\",\r\n                        redirect: true,\r\n                    })\r\n                }\r\n                else if (data.status === \"Confirmation\"){\r\n                    this.setState({\r\n                        redirectionPath: \"/listPageConfirmation/\",\r\n                        redirect: true,\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                    redirect: true,\r\n                });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let msg = \"Something went wrong!\"\r\n            return fieldValidation.call(this, msg, \"\")\r\n        }\r\n    } catch (e) {\r\n        let error = e.message;\r\n        apiError.call(this, error)\r\n    }\r\n}\r\n\r\nexport default trnSaveSubmitFun;\r\n"],"names":["event","ele","document","getElementById","target","name","value","classList","contains","remove","add","setTimeout","process","id","style","border","this","setState","FormNameUpdatePage","Component","constructor","props","super","sendFormRequest","e","parentCallback","showAuditTrailUserMaster","async","console","log","slug_id","open","fetch","then","response","statusText","url","window","location","origin","replace","json","data","auditTrail","results","showAuditTrail","recordNo","tableName","ok","state","importDisplay","render","columns","dataField","list_page","includes","text","formatter","cell","moment","format","_jsxs","className","marginTop","children","_jsx","margin","paddingTop","color","fontSize","form_name","display","OverlayTrigger","placement","overlay","Tooltip","width","type","onChange","fileSelection","textDecoration","onClick","import_data","Link","to","pathname","fontWeight","cursor","float","marginRight","xmlns","height","fill","viewBox","d","auditTrailView","paddingLeft","paddingRight","version","stroke","opacity","transform","Modal","centered","onClose","onOpen","ModalHeader","ModalContent","ModalDescription","BootstrapTable","keyField","striped","hover","condensed","pagination","paginationFactory","noDataIndication","ModalActions","Button","error","loading","alert","errorMessage","err_msg_visible","role","error_message","msg","queryParams","res","details","message","apiError","call","title","successMessage","_Fragment","msg_visible","FontAwesomeIcon","icon","fas","faCircleCheck","innerWidth","API_form_name","List_Path","form_type","StateDic","report_no","obj_id","received_date","confirmation_date","report_due_date","service_type","customer_ref_details","applicant_type","applicant_name","applicant_contact_no","applicant_email","applicant_address","attention","sample_registration","testParameterAdded","testResult","redirect","modalOpen","fieldDisplay","testResultFor","test_id","test_parameter","test_result","test_requirement","test_unit","test_rcd_","formAction","submitBtn","status","redirectionPath","CreateUpdatePage","drpHandleChange","getDetails","getDetailsFunction","handleSubmit","preventDefault","trnSaveSubmitFun","fetchSampleDetails","fetchSampleDetailsFun","addTestResultModal","testID","getAttribute","parentElement","addTestResultRow","addTestResultRowFun","deleteTestResultRow","tr","parentNode","removeChild","componentDidMount","Navigate","Wrapper_ClickFun","bind","onSubmit","autoComplete","FormName","form_name_list","Loader","load","ErrorMessage","SuccessMessage","success_message","placeholder","ChangeHandler","readOnly","TbLocationSearch","marginLeft","required","DateInput","dateFormat","maxDate","Date","iconPosition","handleChange","clearable","clearIcon","Icon","colour","onFocus","disabled","cols","rows","sample_description","maxLength","length","map","t","textAlign","test_name","GrResources","test_method","department","class","colSpan","closeOnDimmerClick","size","RiDeleteBin6Line","rcd","row","push","innerHTML","result","count","prevState","fieldValidation","key","Object","entries","date","navOrgName","adminAccess","getDetailsFun","srRes","sr","k","v","r","test_parameters","test_note","conclusion","cost","testParameter","groupedItems","reduce","acc","item","parameter","requirement","requestOptions","method","headers","PostHeader","body","JSON","stringify"],"sourceRoot":""}