{"version":3,"file":"static/js/241.6fcc2096.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useCallbackRef.js"],"sourcesContent":["export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}"],"names":["ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","usePrevious","value","ref","useRef","useEffect","current","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","arguments","length","undefined","this","modals","getScrollbarWidth","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","remove","removeContainerStyle","removeAttribute","Object","assign","add","modal","modalIdx","indexOf","push","state","splice","isTopModal","_excluded","manager","useModalManager","provided","useWindow","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","show","role","className","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","ownerWindow","useWaitForDOMRef","isMounted","useMounted","prevShow","exited","setExited","useState","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","isEscKey","defaultPrevented","dialogProps","tabIndex","React","renderTransition","unmountOnExit","mountOnEnter","appear","in","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","classList","hasClass","baseVal","marginProp","el","sharedManager","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","propTypes","PropTypes","variant","CloseButton","ariaLabel","type","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","p","Component","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}